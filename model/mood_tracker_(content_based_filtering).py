# -*- coding: utf-8 -*-
"""Mood-tracker (Content-based filtering).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kjEqOU0_IyENCHD57KuQ52xo3u9RfP4x

LOAD DATASET
"""

import nltk
nltk.download('wordnet')
nltk.download('stopwords')
nltk.download('omw-1.4')

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from nltk.corpus import stopwords
stop = set(stopwords.words('english'))
stop.update(['.', ',', '"', "'", '?','|','!', ':', ';', '(', ')', '[', ']', '{', '}',''])
from nltk.stem import WordNetLemmatizer

df = pd.read_csv('/content/Daylio_Abid.csv')
df

"""MENGECEK INFORMASI PADA DATASET"""

df.info()

"""CEK JUMLAH SUBMOOD & MOOD PADA DATASET"""

df["sub_mood"].value_counts()

df["mood"].value_counts()

"""# **Exploratory Data Analysis**

CEK MISSING VALUE
"""

df.isnull().sum()

"""Menangani missing value"""

#drop baris 'activities' dengan nilai null 
new_df = df.dropna(axis = 0, how ='any')

#cek ukuran data untuk memastikan baris sudah di drop
new_df.shape

#drop kolom full date, date, time
new_df = df.drop(['full_date', 'date', 'time', 'weekday'], axis=1)
new_df

def search_activities(sub_mood):
    lemmatizer = WordNetLemmatizer()
    activitiescount = {}
    for i in range(939):
      sub_temp = (new_df["sub_mood"][i])
      if sub_mood in sub_temp:
          activitiestemp = [lemmatizer.lemmatize(temps.strip().replace('.','').replace(',','').lower()) for temps in str(new_df["activities"][i]).split('|') if temps.strip() not in stop ]
          for a in activitiestemp:
              if a not in activitiescount.keys():
                  activitiescount[a] = 1 
              else:
                  activitiescount[a] += 1
    sorted_activities = []
    sorted_activities = sorted(activitiescount, key=activitiescount.get, reverse=True)
    return sorted_activities


def activities_recommendation(sub_mood):
    topn = []
    topn = search_activities(sub_mood) #function create dictionary only for particular mood
    print("5 Recommendation Activities in %s are:"%(sub_mood))
    print(topn[0])
    print(topn[1])
    print(topn[2])
    print(topn[3])
    print(topn[4])

activities_recommendation('angry')